// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: insertRefresh.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const insertRefreshToken = `-- name: InsertRefreshToken :one
INSERT INTO refresh_tokens (token, created_at, updated_at, user_id, expires_at, revoked_at)
VALUES (
	$1,
	now(),
	now(),
	$2,
	$3,
	$4
)
RETURNING token, created_at, updated_at, user_id, expires_at, revoked_at
`

type InsertRefreshTokenParams struct {
	Token     string
	UserID    uuid.UUID
	ExpiresAt sql.NullTime
	RevokedAt sql.NullTime
}

func (q *Queries) InsertRefreshToken(ctx context.Context, arg InsertRefreshTokenParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, insertRefreshToken,
		arg.Token,
		arg.UserID,
		arg.ExpiresAt,
		arg.RevokedAt,
	)
	var i RefreshToken
	err := row.Scan(
		&i.Token,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.ExpiresAt,
		&i.RevokedAt,
	)
	return i, err
}
